#!/usr/bin/env node
var program = require('commander');
var lt_client = require('../client');
var login = require('../login');
var open_url = require('openurl');
var os = require('os');
var fs = require('fs');
const uuidv1 = require('uuid/v1');
const uuidv4 = require('uuid/v4');

program
  .version(require('../package').version);

program
  .command('create <host> <port>')
  .description('Pipes public traffic to local server')
  .option("-h, --host <host>", "Upstream server providing forwarding")
  .option("-l, --local-host <local-host>", "Tunnel traffic to this host instead of localhost, override Host header to this host")
  .option("-s, --subdomain <subdomain>", "Request this subdomain")
  .option("-o, --open <open>", "Opens url in your browser")
  .option("-p, --port <port>", "Local http server port")
  .action(function(host, port, options){
    var opt = {
      host: host,
      port: parseInt(port),
      local_host: options.localHost,
      subdomain: options.subdomain
    };
    var open = options.open;
    lt_client(opt.port, opt, function(err, tunnel) {
      if (err) {
        throw err;
      }
      console.log('your url is: %s', tunnel.url);
      if (open) {
        open_url.open(tunnel.url);
      }
      tunnel.on('error', function(err) {
        throw err;
      });
    });
  });

program
  .command('login <host>')
  .description('Login to a google account')
  .option("-h, --host <host>", "Upstream server providing forwarding")
  .action(function(host){
    var token = uuidv1() + "-" + uuidv4();
    var home = os.homedir();
    fs.writeFile(home + "/" + ".passthrough", token, function(err) {
      if(err) {
        console.log(err);
      } else {
        open_url.open(host + "/auth/google?token=" + token);
      }
    });
});

program.parse(process.argv);

// vim: ft=javascript
